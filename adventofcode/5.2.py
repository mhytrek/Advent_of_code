import get_input

def change_to_int(l):
    for i in range(len(l)):
        l[i] = int(l[i])
    return l

def proces(line,seeds_old,seeds_new):
    s_o = set()
    while len(seeds_old) > 0:
        p, le = seeds_old.pop()
        if p >= line[1]  and (p+le) <= line[1]+line[2]:
            seeds_new.add((line[0] + p - line[1], le))
        elif p >= line[1] and (p+le) > line[1]+line[2] and p < line[1]+line[2]:
            seeds_new.add((line[0]+p-line[1], line[1]+line[2]-p))
            s_o.add((line[1]+line[2], p+le-line[1]-line[2]))
        elif p < line[1] and (p+le) > line[1] and (p+le) <= line[1]+line[2]:
            s_o.add((p,line[1]-p))
            seeds_new.add((line[0], p+le-line[1]))
        elif p < line[1] and (p+le) > line[1]+line[2]:
            s_o.add((p, line[1] - p))
            seeds_new.add((line[0],line[2]))
            s_o.add((line[1] + line[2], p + le - line[1] - line[2]))
        else:
            s_o.add((p,le))
    return s_o, seeds_new

def change_seeds(s):
    seeds = set()
    for i in range(0,len(s),2):
        seeds.add((s[i],s[i+1]))
    return seeds

def change(lines):
    seeds = lines[0][:-1].split(" ")[1:]
    seeds = change_to_int(seeds)
    seeds = change_seeds(seeds)
    s_n = set()
    for line in lines[1:]:
        line = line[:-1]
        line = line.split(" ")
        if len(line) <= 2:
            seeds = seeds | s_n
            s_n = set()
            continue
        else:
            line = change_to_int(line)
            seeds, s_n = proces(line, seeds, s_n)
    seeds = s_n | seeds
    m = float('inf')
    seeds = list(seeds)
    a = sorted(seeds, key=lambda x:x[0])
    return a[0][0]

# lines = get_input.download_input(5)
file = open("input_day_5")
lines = file.readlines()
my = change(lines)
print(my)
# print(2254686)
# r = 0
# t = 0
# s = {(1782090387, 20126067), (2098044074, 8346258), (3205650909, 38334339), (1281980084, 4546595), (2747634852, 3255594), (2507720763, 6551353), (3686725471, 38412737), (3169123683, 712355), (1673953353, 1737684), (2777625705, 45425778), (199602917, 60656396), (3457043107, 17335066), (2369814041, 39145398), (3811268531, 45874447), (3027898952, 10289772), (2647727882, 12116249), (961172664, 4879232), (3603961928, 28309403), (95285571, 18179132), (369762033, 23701050), (1186873040, 10632489), (791255257, 9019916), (1377768756, 32648761), (2854891605, 26138970), (2096515986, 1528088), (2544917158, 17440676), (2069991211, 17219989), (1080630934, 10132976), (2254686, 10660706), (952677607, 452381), (3871578677, 45126378), (1724133724, 1261897), (457665150, 30267020), (3330526441, 10529374), (823961060, 18593595), (487932170, 9634382), (48750421, 46535150), (3632271331, 16611162), (2771943443, 1730099), (800275173, 11081903), (2504054106, 3666657), (2692924096, 14871707), (1580497895, 39545507), (2823051483, 15512079), (2324727144, 2393304), (2899305373, 17260095), (1228097708, 11527128), (1260601413, 21378671), (3803193217, 8075314), (427916782, 1737506), (4027142815, 5749209), (1197505529, 30592179), (2930709020, 1479968), (2023373170, 24244879), (1684640499, 5859354), (2633028670, 14699212), (1153910022, 13696875), (4001340211, 5291305), (2738604893, 9029959), (4073017004, 29356997), (953129988, 8042676), (1946923035, 13315579), (1347908738, 9343529), (2707795803, 30809090), (2982314302, 9979776), (811357076, 5741797), (1410417517, 9879070), (3440755130, 16287977), (1483815008, 2235236), (3666745231, 19980240), (3725138208, 35770597), (1327372504, 14669538), (1300160868, 17705195), (1038500191, 21626449)}
# for a in s:
#     if a not in my:
#         r+=1
#         print(a)
#     else:
#         t+=1
# print(len(s), len(my))
# print(r,t)
